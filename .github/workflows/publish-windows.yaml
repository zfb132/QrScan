name: Windows

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  deploy:
    name: build and run
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: download code and run
        env:
          TZ: Asia/Shanghai
        run: |
          move scripts/config_env.bat ./
          move scripts/publish.bat ./
      
      - name: Configure Environments
        run: |
          ./config_env.bat

      - name: Set version
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            export VERSION="${{ github.ref_name }}"
          else
            export VERSION="v0.0.0"
          fi
          export VERSION="${VERSION#v}"
          export MAJOR="${VERSION%%.*}"
          export MINOR="${VERSION#*.}"
          export PATCH="${MINOR#*.}"
          export MINOR="${MINOR%%.*}"
          export HASH="${GITHUB_SHA::8}"
          export DATETIME=$(date +%Y%m%d%H%M)

          echo "VERSION=${MAJOR}.${MINOR}.${PATCH}"
          echo "ID=${HASH}_${DATETIME}"
          
          sed -i "s/V_MAJOR/${MAJOR}/g" file_version_info.txt
          sed -i "s/V_MINOR/${MINOR}/g" file_version_info.txt
          sed -i "s/V_PATCH/${PATCH}/g" file_version_info.txt
          sed -i "s/COMMIT_HASH/${HASH}/g" file_version_info.txt
          sed -i "s/YYYYMMDDHHMM/${DATETIME}/g" file_version_info.txt
          sed -i "s#setWindowTitle.*#setWindowTitle(\"图片二维码检测识别 ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}\")#g" custom_qwidget.py

      - name: Publish Release
        run: |
          ./publish.bat

      - name: Upload release file
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: QrScan.zip
          retention-days: 1

  upload:
    name: Upload Windows Release
    runs-on: ubuntu-latest
    needs: deploy
    # 只在tag时执行，即在自己终端运行以下代码后触发
    # git tag -a v0.1.0 -m "release 0.1.0 version"
    # git push origin --tags
    if: contains(github.ref, 'tags/')
    steps:
      - name: Download release file
        uses: actions/download-artifact@v3
        with:
          name: release
      - name: Create Windows Release
        run: |
          mv QrScan.zip QrScan_windows_${{ github.ref_name }}.zip
      - name: Upload Windows Release
        uses: softprops/action-gh-release@v1
        with:
          files: QrScan_windows_${{ github.ref_name }}.zip